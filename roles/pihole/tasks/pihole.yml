- name: Pi-Hole | create Pi-hole config directories
  file:
    path: "{{ item }}"
    owner: root
    group: root
    mode: 0755
    state: directory
  loop:
  - "{{ pihole_config_path }}"
  - "{{ dnsmasq_config_path }}"
  - "{{ nginx_config_path }}"

- name: Pi-Hole | create Pi-Hole local.list
  template:
    src: local.list.j2
    dest: "{{ pihole_config_path }}/local.list"
    owner: root
    group: root
    mode: 0644

- name: Pi-Hole | create dnsmasq config
  template:
    src: 99-local.conf.j2
    dest: "{{ dnsmasq_config_path }}/99-local.conf"
    owner: root
    group: root
    mode: 0644
  when: false

- name: Pi-Hole | start Pi-Hole container
  docker_container:
    name: pihole
    hostname: "{{ ansible_hostname }}"
    image: pihole/pihole:latest
    ports: 
    - '53:53/tcp'
    - '53:53/udp'
    volumes:
    - "{{ pihole_config_path }}/:/etc/pihole/"
    - "{{ dnsmasq_config_path }}/:/etc/dnsmasq.d/"
    dns_servers:
    - 127.0.0.1
    - 8.8.8.8
    restart_policy: unless-stopped
    recreate: yes
    state: started
  environment:
    TZ: 'Europe/London'
    DNS1: "{{ pihole_upstream_dns[0] }}"
    DNS2: "{{ pihole_upstream_dns[1] }}"
    VIRTUAL_HOST: "{{ pihole_admin_fqdn }}"
    VIRTUAL_PORT: 80

- name: Pi-Hole | NGINX site config
  template:
    src: nginx-pihole.conf.j2
    dest: "{{ nginx_config_path }}/pihole.conf"
    owner: root
    group: root
    mode: 0644

- set_fact:
    nginx_config_mounts: "{{ nginx_config_mounts + [nginx_config_path + '/pihole.conf:/etc/nginx/conf.d/pihole.conf'] }}"
