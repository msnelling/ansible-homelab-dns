- name: Pi-Hole | create Pi-hole config directories
  file:
    path: "{{ item }}"
    owner: root
    group: root
    mode: 0755
    state: directory
  loop:
  - "{{ pihole_config_path }}"
  - "{{ dnsmasq_config_path }}"

- name: Pi-Hole | create Pi-Hole local.list
  template:
    src: local.list.j2
    dest: "{{ pihole_config_path }}/local.list"
    owner: root
    group: root
    mode: 0644

- name: Pi-Hole | create dnsmasq config
  template:
    src: 99-local.conf.j2
    dest: "{{ dnsmasq_config_path }}/99-local.conf"
    owner: root
    group: root
    mode: 0644
  when: false

- name: Pi-Hole | start Pi-Hole container
  docker_container:
    name: pihole
    hostname: "{{ ansible_hostname }}"
    image: pihole/pihole:latest
    ports: 
    - '53:53/tcp'
    - '53:53/udp'
    volumes:
    - "{{ pihole_config_path }}/:/etc/pihole/"
    - "{{ dnsmasq_config_path }}/:/etc/dnsmasq.d/"
    networks_cli_compatible: yes # defaults to yes in Ansible 2.12
    networks:
    - name: traefik_proxy
    labels:
      traefik.enable: "true"
      traefik.backend: "pihole"
      traefik.frontend.rule: "Host:{{ pihole_admin_fqdn }}; PathPrefixStrip: /pihole; AddPrefix: /admin"
      traefik.port: "80"
      traefik.docker.network: "traefik_proxy"
      traefik.frontend.headers.SSLRedirect: "true"
      traefik.frontend.headers.frameDeny: "true"
      traefik.frontend.headers.browserXSSFilter: "true"
      traefik.frontend.headers.contentTypeNosniff: "true"
      traefik.frontend.headers.forceSTSHeader: "true"
      traefik.frontend.headers.STSSeconds: "315360000"
      traefik.frontend.headers.STSIncludeSubdomains: "true"
      traefik.frontend.headers.STSPreload: "true"
    dns_servers:
    - 127.0.0.1
    - 8.8.8.8
    restart_policy: unless-stopped
    recreate: yes
    state: started
  environment:
    TZ: 'Europe/London'
    DNS1: "{{ pihole_upstream_dns[0] }}"
    DNS2: "{{ pihole_upstream_dns[1] }}"
    VIRTUAL_HOST: "{{ pihole_admin_fqdn }}"
    VIRTUAL_PORT: 80
